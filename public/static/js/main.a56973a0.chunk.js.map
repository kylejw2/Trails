{"version":3,"sources":["components/upsertTrail.js","components/trail.js","components/addTrail.js","components/trails.js","App.js","index.js"],"names":["UpsertTrail","props","state","name","length","location","reviews","url","process","id","handleChange","bind","handleClick","handleClickAddReview","handleChangeReview","event","this","setState","target","value","preventDefault","data","upsertTrail","concat","index","updatedReview","splice","trail","options","method","headers","body","JSON","stringify","fetch","refresh","map","review","key","type","className","placeholder","onChange","onClick","deleteReview","React","Component","Trail","useState","updateShown","setUpdate","eraseTrail","a","updateShownPrev","AddTrail","handleChangeCreate","handleClickCreate","addTrail","Trails","trails","response","json","_id","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a56973a0.chunk.js","sourcesContent":["import React from 'react';\n\nexport default class UpsertTrail extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            name: this.props.name,\n            length: this.props.length,\n            location: this.props.location,\n            reviews: this.props.reviews\n        }\n        this.url = `${process.env.REACT_APP_API_URL}/trails/${this.props.id}`;\n        this.handleChange = this.handleChange.bind(this);\n        this.handleClick = this.handleClick.bind(this);\n        this.handleClickAddReview = this.handleClickAddReview.bind(this);\n        this.handleChangeReview = this.handleChangeReview.bind(this);\n    }\n\n    handleChange(event) {\n        this.setState({[event.target.name]: event.target.value})\n    }\n\n    handleClick(event) {\n        event.preventDefault();\n        const {...data} = this.state;\n        this.upsertTrail(data);\n    }\n\n    handleClickAddReview(event) {\n        event.preventDefault();\n        const reviews = this.state.reviews.concat(['']);\n        this.setState({reviews: reviews});\n    }\n\n    handleChangeReview(event, index) {\n        const updatedReview = this.state.reviews.concat();\n        updatedReview[index] = event.target.value;\n        this.setState({reviews: updatedReview});\n    }\n    \n    deleteReview(event, index) {\n        event.preventDefault();\n        const reviews = this.state.reviews.concat();\n        reviews.splice(index, 1);\n        this.setState({reviews: reviews})\n    }\n\n    async upsertTrail(trail) {\n        const options = {\n            method: 'PUT',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(trail)\n        }\n        await fetch(this.url, options);\n        this.props.refresh();\n    }\n\n    render() {\n        const reviews = this.state.reviews.map((review, index) => {\n            return (\n                <div key={index}>\n                <input \n                type='text'\n                className='review'\n                placeholder={`Review ${index + 1}`} \n                value={review} \n                onChange={event => this.handleChangeReview(event, index)}/>\n                <button onClick={event => this.deleteReview(event, index)}>Delete review</button>\n                </div>\n            )\n        });\n        return (\n            <form className='upsert-trail'>\n                <input type='text' name='name' placeholder='Name' value={this.state.name} onChange={this.handleChange} />\n                <input type='number' name='length' placeholder='Length' value={this.state.length} onChange={this.handleChange}/>\n                <input type='text' name='location' placeholder='Location' value={this.state.location} onChange={this.handleChange}/>\n                {reviews}\n                <button className='add-rvw-btn' onClick={this.handleClickAddReview}>Add review</button>\n                <button type='submit' onClick={this.handleClick}>Update trail</button>\n            </form>\n        );\n    }\n}","import React, { useState } from 'react';\nimport UpsertTrail from './upsertTrail';\n\nconst Trail = (props) => {\n    const [updateShown, setUpdate] = useState(false);\n    const eraseTrail = async () => {\n        const options = {\n            method: 'DELETE'\n        };\n        await fetch(`${process.env.REACT_APP_API_URL}/trails/${props.id}`, options);\n        props.refresh();\n    }\n    const toggleMods = () => {\n        setUpdate(updateShownPrev => !updateShownPrev);\n    }\n\n    return (\n        <>\n        <li>\n            {props.name}\n            <i className=\"fa fa-search-plus\" onClick={toggleMods}></i>\n            <i className=\"fa fa-trash-o\" onClick={eraseTrail}></i>\n        </li>\n        {\n            updateShown ? \n            <UpsertTrail \n            name={props.name}\n            id={props.id}\n            length={props.length}\n            location={props.location}\n            reviews={props.reviews}\n            refresh={props.refresh}\n            />\n            : ''\n        }\n        </>\n    )\n}\nexport default Trail;","import React from 'react';\n\nexport default class AddTrail extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            name: '',\n            length: '',\n            location: '',\n            reviews: ['']\n        }\n        this.url = `${process.env.REACT_APP_API_URL}/trails`;\n        this.handleChangeCreate = this.handleChangeCreate.bind(this);\n        this.handleClickCreate = this.handleClickCreate.bind(this);\n        this.handleClickAddReview = this.handleClickAddReview.bind(this);\n        this.handleChangeReview = this.handleChangeReview.bind(this);\n    }\n\n    handleChangeCreate(event) {\n        this.setState({[event.target.name]: event.target.value})\n    }\n\n    handleClickCreate(event) {\n        event.preventDefault();\n        const {...data} = this.state;\n        this.addTrail(data);\n    }\n\n    handleClickAddReview(event) {\n        event.preventDefault();\n        const reviews = this.state.reviews.concat(['']);\n        this.setState({reviews: reviews});\n    }\n\n    handleChangeReview(event, index) {\n        const updatedReview = this.state.reviews.concat();\n        updatedReview[index] = event.target.value;\n        this.setState({reviews: updatedReview});\n    }\n\n    deleteReview(event, index) {\n        event.preventDefault();\n        const reviews = this.state.reviews.concat();\n        reviews.splice(index, 1);\n        this.setState({reviews: reviews})\n    }\n\n    async addTrail(trail) {\n        const options = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(trail)\n        }\n        await fetch(this.url, options);\n        this.setState({\n            name: '',\n            length: '',\n            location: '',\n            reviews: []\n        });\n        this.props.refresh();\n    }\n\n    render() {\n        const reviews = this.state.reviews.map((review, index) => {\n            return (\n                <div key={index}>\n                <input \n                type='text'\n                className='review'\n                placeholder={`Review ${index + 1}`} \n                value={review} \n                onChange={event => this.handleChangeReview(event, index)}/>\n                <button onClick={event => this.deleteReview(event, index)}>Delete review</button>\n                </div>\n            )\n        });\n        return (\n            <form className='add-trail'>\n                <input type='text' name='name' placeholder='Name' value={this.state.name} onChange={this.handleChangeCreate} />\n                <input type='number' name='length' placeholder='Length' value={this.state.length} onChange={this.handleChangeCreate}/>\n                <input type='text' name='location' placeholder='Location' value={this.state.location} onChange={this.handleChangeCreate}/>\n                {reviews}\n                <button className='add-rvw-btn' onClick={this.handleClickAddReview}>Add review</button>\n                <button type='submit' onClick={this.handleClickCreate}>Add new trail</button>\n            </form>\n        )\n    }\n}","import React from 'react';\nimport Trail from './trail';\nimport AddTrail from './addTrail'; //\n\nexport default class Trails extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            trails: []\n        }\n        this.refresh = this.refresh.bind(this);\n        this.url = `${process.env.REACT_APP_API_URL}/trails`;\n    }\n\n    componentDidMount() {\n        this.refresh();\n    }\n\n    async refresh() {\n        const response = await fetch(this.url);\n        const data = await response.json();\n        this.setState({trails: data});\n    }\n\n    render() {\n        const trails = this.state.trails.map(trail => <Trail \n            key={trail._id}\n            id={trail._id}\n            name={trail.name}\n            length={trail.length}\n            location={trail.location}\n            reviews={trail.reviews}\n            refresh={this.refresh}\n        />);\n        return (\n            <>\n            <AddTrail refresh={this.refresh}/>\n            <ul>\n                {trails}\n            </ul>\n            </>\n        )\n    }\n}","import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Trails from './components/trails';\n\nfunction App() {\n  return (\n    <Router>\n      <h1>Must-Hike Trails in Utah</h1>\n      <Route>\n        <Trails />\n      </Route>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}